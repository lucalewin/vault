name: Build and Release

on:
  release:
    types: [published]

permissions: 
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          # - x86_64-unknown-linux-gnu
          # - aarch64-unknown-linux-musl
          # - x86_64-unknown-linux-musl
    steps:
    - uses: actions/checkout@v4

    # Frontend
    - name: Install Bun
      uses: oven-sh/setup-bun@v2

    - name: Install and Build Frontend
      working-directory: frontend
      run: |
        bun install
        bun run build

    # Backend
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
        components: rustc, rust-src, cargo
    - name: Cache Cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Build Backend
      uses: actions-rs/cargo@v1
      env:
        SQLX_OFFLINE: true
      with:
        command: build
        args: --release --target=${{ matrix.target }}
        use-cross: true

    # Publish
    - name: Prepare Release
      run: |
        mkdir -p release
        cp -r frontend/dist release/static
        cp target/${{ matrix.target }}/release/vault release/
        cd release
        zip -r ../vault-${{ matrix.target }}.zip .

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        files: ./vault-${{ matrix.target }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-docker:
    runs-on: ubuntu-latest
    environment: release
    needs: [build]
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/arm64
          push: true
          tags: lucalewin/vault:latest