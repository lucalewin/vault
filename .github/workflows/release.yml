name: Build and Release

on:
  release:
    types: [created]

permissions: 
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    - uses: oven-sh/setup-bun@v2
    
    - name: Build and install frontend dependencies
      working-directory: front  
      run: |
        bun install
        bun run build


    # - name: Setup Node.js 22
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: '22'
    #     cache: npm
    #     cache-dependency-path: frontend/package-lock.json
    
    # - name: Install frontend dependencies
    #   working-directory: frontend
    #   run: npm install
    # - name: Build frontend
    #   working-directory: frontend
    #   run: npm run build
    
    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: aarch64-unknown-linux-gnu
    - name: Migrate database
      env:
        DATABASE_URL: postgresql://postgres:password@localhost:5432/postgres
      run: | # workaround for cross compilation
        cargo install sqlx-cli --no-default-features --features native-tls,postgres
        sqlx migrate run
        cargo sqlx prepare
    - name: Build
      uses: actions-rs/cargo@v1
      env:
        SQLX_OFFLINE: true
      with:
        command: build
        args: --release --target=aarch64-unknown-linux-gnu
        use-cross: true
    - name: Add cache
      uses: Swatinem/rust-cache@v2
      with:
        cache-all-crates: true

    - name: Zip frontend and backend
      run: |
        zip -r release.zip front/dist target/aarch64-unknown-linux-gnu/release/vault

    - name: Upload release asset
      uses: softprops/action-gh-release@v1
      with:
        files: ./release.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
