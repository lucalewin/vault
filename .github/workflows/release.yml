name: Build and Release

on:
  release:
    types: [created]

permissions: 
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    # env:
    #   DATABASE_URL: postgresql://postgres:password@localhost:5432/postgres    

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    # frontend
    - name: Install Bun
      uses: oven-sh/setup-bun@v2
    - name: Install and Build Frontend
      working-directory: front  
      run: |
        bun install
        bun run build

    # backend
    # - name: Install Rust
    #   uses: dtolnay/rust-toolchain@stable
    #   with:
    #     targets: aarch64-unknown-linux-gnu
    #     components: rustc, rust-std, cargo
    # - name: Install Rust 2
    #   uses: dtolnay/rust-toolchain@stable
    #   with:
    #     components: rustc, rust-std, cargo
    # - name: Install latest stable
    #   uses: actions-rs/toolchain@v1
    #   with:
    #     toolchain: stable
    #     profile: minimal
    #     default: true
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: aarch64-unknown-linux-gnu
        profile: minimal
        components: cargo, rustc, rust-src
    - name: Install sqlx-cli
      uses: baptiste0928/cargo-install@v3
      with:
        crate: sqlx-cli
    - name: Install cross
      uses: baptiste0928/cargo-install@v3
      with:
        crate: cross
    - name: Migrate Database
      env:
        DATABASE_URL: postgresql://postgres:password@localhost:5432/postgres
      run: sqlx database setup
    - name: Build backend
      uses: actions-rs/cargo@v1
      env:
        DATABASE_URL: postgresql://postgres:password@localhost:5432/postgres
      with:
        command: build
        args: --release --target=aarch64-unknown-linux-gnu
        use-cross: true

    # publish
    - name: Zip Frontend and Backend
      run: |
        mkdir release
        cp -r front/dist release/static
        cp target/aarch64-unknown-linux-gnu/release/vault release/server
        zip -r release -o release.zip
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        files: ./release.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
